{"version":3,"file":"static/js/507.99a41ba9.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","webpack://react-homework-template/./src/components/ResetPwdForm/ResetPwdForm.module.css?da5d","components/ResetPwdForm/ResetPwdForm.jsx","pages/ResetPwdPage/ResetPwdPage.module.css","pages/ResetPwdPage/ResetPwdPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"backdrop\":\"Loader_backdrop__gjec2\",\"circles\":\"Loader_circles__Tkm1N\",\"animateBg\":\"Loader_animateBg__-kOiO\",\"animate\":\"Loader_animate__+YIar\"};","import css from \"./Loader.module.css\";\n\nconst Loader = () => {\n  return (\n    <div className={css.backdrop}>\n      <div className={css.circles}>\n        <span style={{ '--n': 1 }}></span>\n        <span style={{ '--n': 2 }}></span>\n        <span style={{ '--n': 3 }}></span>\n        <span style={{ '--n': 4 }}></span>\n        <span style={{ '--n': 5 }}></span>\n        <span style={{ '--n': 6 }}></span>\n        <span style={{ '--n': 7 }}></span>\n        <span style={{ '--n': 8 }}></span>\n        <span style={{ '--n': 9 }}></span>\n        <span style={{ '--n': 10 }}></span>\n        <span style={{ '--n': 11 }}></span>\n        <span style={{ '--n': 12 }}></span>\n        <span style={{ '--n': 13 }}></span>\n        <span style={{ '--n': 14 }}></span>\n        <span style={{ '--n': 15 }}></span>\n        <span style={{ '--n': 16 }}></span>\n      </div>\n    </div>\n  );\n};\n\nexport default Loader;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ResetPwdForm_container__lTxjZ\",\"form\":\"ResetPwdForm_form__Ov24i\",\"title\":\"ResetPwdForm_title__AKG-E\",\"label\":\"ResetPwdForm_label__PFLHt\",\"error\":\"ResetPwdForm_error__FpSOC\",\"icon\":\"ResetPwdForm_icon__rmjFm\",\"form_input\":\"ResetPwdForm_form_input__5VRmK\",\"btn\":\"ResetPwdForm_btn__F0XLt\",\"link\":\"ResetPwdForm_link__1Z68b\",\"bottle\":\"ResetPwdForm_bottle__SjKaJ\"};","import { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport { useDispatch } from \"react-redux\";\nimport toast, { Toaster } from \"react-hot-toast\";\nimport * as Yup from \"yup\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport sprite from \"../../images/sprite.svg\";\nimport style from \"./ResetPwdForm.module.css\";\nimport { resetPwd } from \"../../redux/auth/operations.js\";\nimport { routes } from \"routes/routes\";\nimport { useSearchParams } from \"react-router-dom\";\n\nconst ResetPwdSchema = Yup.object().shape({\n  password: Yup.string()\n    .min(8, \"Password must be 8 symbols minimum\")\n    .max(64, \"Password must be 64 symbols maximum\")\n    .required(\"Password is required!\"),\n  repeatPassword: Yup.string()\n    .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\n    .min(8, \"Password must be 8 symbols minimum\")\n    .max(64, \"Password must be 64 symbols maximum\")\n    .required(\"Confirm your password!\"),\n});\n\nexport default function ResetPwdForm() {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [showPassword, setShowPassword] = useState(false);\n  const [searchParams] = useSearchParams();\n  const token = searchParams.get(\"token\");\n\n  const togglePasswordVisibility = () => {\n    setShowPassword((prevState) => !prevState);\n  };\n\n  const handleSubmit = async (values, actions) => {\n    if (values.password !== values.repeatPassword) {\n      return toast.error(\"Passwords don't match\");\n    }\n\n    if (!token) {\n      return toast.error(\"Token is missing\");\n    }\n\n    try {\n      await dispatch(resetPwd({ password: values.password, token })).unwrap();\n      toast.success(\"Password has been reset successfully.\");\n      actions.resetForm();\n      navigate(routes.LOGIN);\n    } catch (error) {\n      toast.error(\"Failed to reset password. Please try again.\");\n    }\n    actions.setSubmitting(false);\n  };\n\n  return (\n    <div className=\"{style.container}\">\n      <Toaster position=\"top-center\" reverseOrder={false} />\n      <Formik\n        initialValues={{\n          password: \"\",\n          repeatPassword: \"\",\n        }}\n        validationSchema={ResetPwdSchema}\n        onSubmit={handleSubmit}\n      >\n        {({ isSubmitting, touched, errors }) => (\n          <Form className={style.form} autoComplete=\"off\">\n            <h2 className={style.title}>Update your password</h2>\n            <label className={style.label} htmlFor=\"password\">\n              Enter your password\n              {/* <div className={style.passwordWrapper}> */}\n              <Field\n                id=\"password\"\n                className={style.form_input}\n                type={showPassword ? \"text\" : \"password\"}\n                name=\"password\"\n                placeholder=\"Password\"\n                error={touched.password && errors.password ? \"true\" : \"false\"}\n              />\n              <span\n                onClick={togglePasswordVisibility}\n                // className={style.togglePassword}\n              >\n                <svg className={style.icon}>\n                  <use\n                    href={sprite + (showPassword ? \"#eye-show\" : \"#eye-hide\")}\n                  />\n                </svg>\n              </span>\n              {/* </div> */}\n              <ErrorMessage\n                className={style.error}\n                name=\"password\"\n                component=\"div\"\n              />\n            </label>\n            <label className={style.label} htmlFor=\"repeatPassword\">\n              Repeat password\n              {/* <div className={style.passwordWrapper}> */}\n              <Field\n                id=\"repeatPassword\"\n                className={style.form_input}\n                type={showPassword ? \"text\" : \"password\"}\n                name=\"repeatPassword\"\n                placeholder=\"Repeat password\"\n                error={\n                  touched.repeatPassword && errors.repeatPassword\n                    ? \"true\"\n                    : \"false\"\n                }\n              />\n              <span\n                onClick={togglePasswordVisibility}\n                // className={style.togglePassword}\n              >\n                <svg className={style.icon}>\n                  <use\n                    href={sprite + (showPassword ? \"#eye-show\" : \"#eye-hide\")}\n                  />\n                </svg>\n              </span>\n              {/* </div> */}\n              <ErrorMessage\n                className={style.error}\n                name=\"repeatPassword\"\n                component=\"div\"\n              />\n            </label>\n            <button className={style.btn} type=\"submit\" disabled={isSubmitting}>\n              Reset Password\n            </button>\n          </Form>\n        )}\n      </Formik>\n      <div className={style.bottle}></div>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {};","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport ResetPwdForm from \"../../components/ResetPwdForm/ResetPwdForm.jsx\";\nimport { selectIsLoading } from \"../../redux/auth/auth.selectors.js\";\nimport Loader from \"../../components/Loader/Loader.jsx\";\nimport style from \"./ResetPwdPage.module.css\";\n\nconst ResetPwdPage = () => {\n  const isLoader = useSelector(selectIsLoading);\n\n  return (\n    <div className={style.container}>\n      <div className={style.background}>\n        {isLoader ? (\n          <Loader />\n        ) : (\n          <>\n            <ResetPwdForm />\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ResetPwdPage;\n"],"names":["Loader","_jsx","className","css","children","_jsxs","style","ResetPwdSchema","Yup","shape","password","min","max","required","repeatPassword","oneOf","ResetPwdForm","dispatch","useDispatch","navigate","useNavigate","showPassword","setShowPassword","useState","searchParams","useSearchParams","token","get","togglePasswordVisibility","prevState","Toaster","position","reverseOrder","Formik","initialValues","validationSchema","onSubmit","async","values","actions","toast","error","resetPwd","unwrap","success","resetForm","routes","LOGIN","setSubmitting","_ref","isSubmitting","touched","errors","Form","autoComplete","htmlFor","Field","id","type","name","placeholder","onClick","href","sprite","ErrorMessage","component","disabled","ResetPwdPage","isLoader","useSelector","selectIsLoading","container","background","_Fragment"],"sourceRoot":""}